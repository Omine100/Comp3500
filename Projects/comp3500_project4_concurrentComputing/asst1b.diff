diff --git a/kern/asst1/catsem.c b/kern/asst1/catsem.c
index dcb257b..64598d4 100644
--- a/kern/asst1/catsem.c
+++ b/kern/asst1/catsem.c
@@ -2,82 +2,70 @@
  * catsem.c
  *
  * 30-1-2003 : GWA : Stub functions created for CS161 Asst1.
- *
- * NB: Please use SEMAPHORES to solve the cat syncronization problem in 
- * this file.
  */
 
-
 /*
- * 
  * Includes
- *
  */
 
 #include <types.h>
 #include <lib.h>
 #include <test.h>
 #include <thread.h>
-
+#include <synch.h>
 
 /*
- * 
  * Constants
- *
- */
-
-/*
- * Number of food bowls.
  */
 
+//Number of bowls, cats, and mice
 #define NFOODBOWLS 2
-
-/*
- * Number of cats.
- */
-
 #define NCATS 6
-
-/*
- * Number of mice.
- */
-
 #define NMICE 2
 
+//Variable and resource declarations
+struct semaphore *resources;
+int bowl_first = 0, bowl_second = 0;
+int cat_array[6] = {0,0,0,0,0,0};
+int mice_array[2] = {0,0};
 
 /*
- * 
  * Function Definitions
- * 
  */
 
-
 /*
  * catsem()
  *
  * Arguments:
  *      void * unusedpointer: currently unused.
  *      unsigned long catnumber: holds the cat identifier from 0 to NCATS - 1.
- *
  * Returns:
  *      nothing.
- *
- * Notes:
- *      Write and comment this function using semaphores.
- *
  */
 
-static
-void
-catsem(void * unusedpointer, 
-       unsigned long catnumber)
-{
-        /*
-         * Avoid unused variable warnings.
-         */
-
+static void catsem(void * unusedpointer, unsigned long catnumber) {
         (void) unusedpointer;
         (void) catnumber;
+
+	P(resources);
+	while (cat_array[catnumber] < 4) {
+		if (bowl_first == 0 && bowl_second != 2) {
+			bowl_first = 1;
+			clocksleep(1);
+			bowl_first = 0;
+			cat_array[catnumber] = cat_array[catnumber] + 1;
+			kprintf("Cat finished eating at bowl 1");
+		} else if (bowl_first != 2 && bowl_second == 0) {
+			bowl_second = 1;
+			clocksleep(1);
+			bowl_second = 0;
+			cat_array[catnumber] = cat_array[catnumber] + 1;
+			kprintf("Cat finished eating at bowl 2");
+		} else {
+			kprintf("Cat does not eat");
+		}
+	}
+	V(resources);
 }
         
 
@@ -88,26 +76,33 @@ catsem(void * unusedpointer,
  *      void * unusedpointer: currently unused.
  *      unsigned long mousenumber: holds the mouse identifier from 0 to 
  *              NMICE - 1.
- *
  * Returns:
  *      nothing.
- *
- * Notes:
- *      Write and comment this function using semaphores.
- *
  */
 
-static
-void
-mousesem(void * unusedpointer, 
-         unsigned long mousenumber)
-{
-        /*
-         * Avoid unused variable warnings.
-         */
-
+static void mousesem(void * unusedpointer, unsigned long mousenumber) {
         (void) unusedpointer;
         (void) mousenumber;
+
+	P(resources);
+	while (mice_array[mousenumber] < 4) {
+		if (bowl_first == 0 && bowl_second != 1) {
+			bowl_first = 2;
+			clocksleep(1);
+			bowl_first = 0;
+			mice_array[mousenumber] = mice_array[mousenumber] + 1;
+			kprintf("Mouse finished eating at bowl 1");
+		} else if (bowl_first != 1 && bowl_second == 0) {
+			bowl_second = 2;
+			clocksleep(1);
+			bowl_second = 0;
+			mice_array[mousenumber] = mice_array[mousenumber] + 1;
+			kprintf("Mouse finished eating at bowl 2");
+		} else {
+			kprintf("Mouse does not eat");
+		}
+	}
+	V(resources);
 }
 
 
@@ -117,24 +112,13 @@ mousesem(void * unusedpointer,
  * Arguments:
  *      int nargs: unused.
  *      char ** args: unused.
- *
  * Returns:
  *      0 on success.
- *
- * Notes:
- *      Driver code to start up catsem() and mousesem() threads.  Change this 
- *      code as necessary for your solution.
  */
 
-int
-catmousesem(int nargs,
-            char ** args)
-{
+int catmousesem(int nargs, char ** args) {
+	resources = sem_create("bowls", 2);
         int index, error;
-   
-        /*
-         * Avoid unused variable warnings.
-         */
 
         (void) nargs;
         (void) args;
@@ -144,23 +128,14 @@ catmousesem(int nargs,
          */
 
         for (index = 0; index < NCATS; index++) {
-           
-                error = thread_fork("catsem Thread", 
-                                    NULL, 
-                                    index, 
-                                    catsem, 
-                                    NULL
-                                    );
+                error = thread_fork("catsem Thread", NULL, index, catsem, NULL);
                 
                 /*
                  * panic() on error.
                  */
 
                 if (error) {
-                 
-                        panic("catsem: thread_fork failed: %s\n", 
-                              strerror(error)
-                              );
+                        panic("catsem: thread_fork failed: %s\n", strerror(error));
                 }
         }
         
@@ -169,30 +144,19 @@ catmousesem(int nargs,
          */
 
         for (index = 0; index < NMICE; index++) {
-   
-                error = thread_fork("mousesem Thread", 
-                                    NULL, 
-                                    index, 
-                                    mousesem, 
-                                    NULL
-                                    );
+        	error = thread_fork("mousesem Thread", NULL, index, mousesem, NULL);
                 
                 /*
                  * panic() on error.
                  */
 
                 if (error) {
-         
-                        panic("mousesem: thread_fork failed: %s\n", 
-                              strerror(error)
-                              );
+                        panic("mousesem: thread_fork failed: %s\n", strerror(error));
                 }
         }
-
         return 0;
 }
 
-
 /*
  * End of catsem.c
  */
diff --git a/kern/compile/ASST1/catsem.o b/kern/compile/ASST1/catsem.o
index 46e4b42..37bb3cb 100644
Binary files a/kern/compile/ASST1/catsem.o and b/kern/compile/ASST1/catsem.o differ
diff --git a/kern/compile/ASST1/depend.mk b/kern/compile/ASST1/depend.mk
index 3861979..ac05469 100644
--- a/kern/compile/ASST1/depend.mk
+++ b/kern/compile/ASST1/depend.mk
@@ -103,7 +103,8 @@ catlock.o: ../../asst1/catlock.c ../../include/types.h machine/types.h \
   ../../include/test.h ../../include/thread.h machine/pcb.h
 catsem.o: ../../asst1/catsem.c ../../include/types.h machine/types.h \
   ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/test.h ../../include/thread.h machine/pcb.h
+  ../../include/test.h ../../include/thread.h machine/pcb.h \
+  ../../include/synch.h
 sfs_vnode.o: ../../fs/sfs/sfs_vnode.c ../../include/types.h \
   machine/types.h ../../include/kern/types.h ../../include/lib.h \
   machine/setjmp.h ../../include/synch.h ../../include/array.h \
diff --git a/kern/compile/ASST1/kernel b/kern/compile/ASST1/kernel
index 2276ae6..841de7b 100755
Binary files a/kern/compile/ASST1/kernel and b/kern/compile/ASST1/kernel differ
diff --git a/kern/compile/ASST1/vers.c b/kern/compile/ASST1/vers.c
index 364b4fb..4880f58 100644
--- a/kern/compile/ASST1/vers.c
+++ b/kern/compile/ASST1/vers.c
@@ -1,3 +1,3 @@
 /* This file is automatically generated. Edits will be lost.*/
-const int buildversion = 54;
+const int buildversion = 55;
 const char buildconfig[] = "ASST1";
diff --git a/kern/compile/ASST1/vers.o b/kern/compile/ASST1/vers.o
index 81a4c6e..dafa9a8 100644
Binary files a/kern/compile/ASST1/vers.o and b/kern/compile/ASST1/vers.o differ
diff --git a/kern/compile/ASST1/version b/kern/compile/ASST1/version
index fb1e7bc..c3f407c 100644
--- a/kern/compile/ASST1/version
+++ b/kern/compile/ASST1/version
@@ -1 +1 @@
-54
+55
